@page "/register"
@using CodeRank.API.Identity
@using CodeRank.App.Identity
@using CodeRank.App.Services
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject TokenService TokenService
<h3>Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="registerModel.Username" class="form-control" />
    </div>
    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="registerModel.Email" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="registerModel.Password" class="form-control" type="password" />
    </div>
    <div class="form-group">
        <label for="accountType">Account Type:</label>
        <InputSelect id="accountType" @bind-Value="registerModel.AccountType" class="form-control">
            <option value="@AccountType.Instructor">Instructor</option>
            <option value="@AccountType.Student">Student</option>
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task HandleRegistration()
    {
        var result = await AuthService.Register(registerModel);
        if (result.IsSuccessfulRegistration)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            // Handle registration error
        }
    }
}